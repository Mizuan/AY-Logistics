@model AYLogistics.Models.Project
@{
    ViewBag.Title = "Manage Party";  
}

<div class="form_control_line mb-4">
    <button type="button" class="bg-indigo-500 text-white px-4 py-2 rounded-lg flex items-center space-x-2 text-sm hover:bg-indigo-600" id="btnAddProject">
        <i class="fas fa-plus"></i>
        <span>New Project</span>
    </button>
</div>

<div id="dialogProject" class="hidden">
    <div class="p-6 bg-white rounded shadow-lg space-y-4">
        <h2 class="text-xl font-semibold text-gray-800 mb-4">Add Project</h2>
        <div class="flex flex-wrap -mx-2">
            <div class="w-full md:w-1/2 px-2 mb-4">
                <label class="block text-sm font-medium text-gray-700 mb-2">Project Name</label>
                <input type="text" id="Name" class="block w-full px-3 py-2 border rounded-md text-sm shadow-sm focus:ring focus:ring-blue-500" />
            </div>
            <div class="w-full md:w-1/2 px-2 mb-4">
                <label class="block text-sm font-medium text-gray-700 mb-2">Customer</label>
                <input type="text" placeholder="Search..." class="block w-full px-3 py-2 border rounded-md text-sm shadow-sm focus:ring focus:ring-blue-500 selectedProjectOwner" data-bind='value:POwner.POwnerId.value, POwnerSelect: POwner.POwnerId , uniqueName: false'/>
            </div>
        </div>
        <div class="flex flex-wrap -mx-2">
            <div class="w-full md:w-1/3 px-2 mb-4">
                <label class="block text-sm font-medium text-gray-700 mb-2">Country</label>
                @Html.DropDownListFor(
                    m => m.CountryId,
                    new SelectList(AYLogistics.Models.Nationality.GetCountries(), "Id", "Name"),
                    "-Select-",
                    new { @class = "block w-full px-3 py-2 border rounded-md text-sm shadow-sm focus:ring focus:ring-blue-500" }
                )
                @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-red-500 text-xs mt-1" })
            </div>
            <div class="w-full md:w-1/3 px-2 mb-4">
                <label class="block text-sm font-medium text-gray-700 mb-2">Contact Personal</label>
                <input type="text" id="ContactPersonal" class="block w-full px-3 py-2 border rounded-md text-sm shadow-sm focus:ring focus:ring-blue-500" />
            </div>
            <div class="w-full md:w-1/3 px-2 mb-4">
                <label class="block text-sm font-medium text-gray-700 mb-2">Contact No.</label>
                <input type="text" id="ContactNo" class="block w-full px-3 py-2 border rounded-md text-sm shadow-sm focus:ring focus:ring-blue-500" />
            </div>
        </div>
        <div class="flex flex-wrap -mx-2">
            <div class="w-full px-2">
                <label class="block text-sm font-medium text-gray-700 mb-2">Project Location</label>
                <input type="text" id="Location" class="block w-full px-3 py-2 border rounded-md text-sm shadow-sm focus:ring focus:ring-blue-500" />
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

    var $dialoge = $("#dialogProject");

    $(document).ready(function () {
        $(".dialogProject").hide();

        // Initialize the jQuery UI dialog
        $("#dialogProject").dialog({
            autoOpen: false,
            width: 750,
            modal: true,
            height: 450,
            classes: {
                "ui-dialog": "rounded-lg shadow-lg overflow-hidden",
                "ui-dialog-titlebar": "bg-gray-100 px-4 py-2",
                "ui-dialog-content": "p-4 bg-white space-y-4 overflow-y-auto",
            },
            buttons: [
                {
                    text: "Save",
                    class: "bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded",
                    click: function () {
                        if ($('#Name').val() === "" || $('#CountryId').val() === "0") {
                            // Show validation error using PNotify
                            $.pnotify({
                                title: "Validation Error",
                                text: "Please fill the required fields!",
                                type: "error",
                                styling: "bootstrap3",
                            });
                        } else {
                            SaveProject();
                            $(this).dialog("close");
                        }
                    },
                },
                {
                    text: "Close",
                    class: "bg-gray-500 hover:bg-gray-600 text-white font-semibold py-2 px-4 rounded",
                    click: function () {
                        $(this).dialog("close");
                    },
                },
            ],
            create: function () {
                // Apply Tailwind CSS classes to the button container
                $(this)
                    .parent()
                    .find(".ui-dialog-buttonpane")
                    .addClass("bg-gray-50 p-4 flex justify-end items-center space-x-4 border-t border-gray-200");

                // Remove default jQuery UI button styles
                $(this)
                    .parent()
                    .find(".ui-dialog-buttonset button")
                    .removeClass("ui-button ui-corner-all ui-widget");
            },
        });

        // Open the dialog on button click
        $("#btnAddProject").click(function () {
            ClearProjectDialog();
            $("#dialogProject").dialog("open");
        });
    });


    function ClearProjectDialog() {
        $('#Name').val("");
        $('#ContactPersonal').val("");
        $('#ContactNo').val("");
        $('#Location').val("");
        $('.selectedProjectOwner').val("");
        $(".chosen_select_L").chosen('destroy'); // reset chosen
            $('#CountryId').val(0);
        $(".chosen_select_L").chosen(); //~
    }

    function EditProject(Id) {
        $dialoge.dialog({
            width: 750,
            modal: true,
            height: 380,
            title: "Edit Project",
            buttons: [{
                text: "Update",
                'class': 'bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded',
                click: function () {
                    /*TO DO: give a condition with Role to disable update button*/
                    UpdateProject(Id);
                    $dialoge.dialog('close');

                }},
                                {
                                    text: "Close",
                                    'class': 'bg-gray-500 hover:bg-gray-600 text-white font-semibold py-2 px-4 rounded',
                                    click: function () {
                                        $(this).dialog("close");
                                    }
            }]
        });
        GetSelectedProject(Id);
    }

    function GetSelectedProject(Id) {
       ClearProjectDialog();
        var URL = '/Job/GetSelectedProject';

        $.getJSON(URL + '/?ProjectId=' + Id, function (data) {
            try {
                $('#Name').val(data.Name);
                $('#ContactPersonal').val(data.ContactPersonal);
                $('#ContactNo').val(data.ContactNo);
                $('#Location').val(data.Location);
                koMM.POwner.POwnerId.id = data.CustomerId;
                $('.selectedProjectOwner').val(data.OwnerName);
                $(".chosen_select_L").chosen('destroy'); // reset chosen
                    $('#CountryId').val(data.CountryId);
                $(".chosen_select_L").chosen(); //~
            }
            catch (e) {
                ClearProjectDialog();
 
            }
        });
    }

    function UpdateProject(Id) {
        var Id = Id;
        var ProjectName = $('#Name').val();
        var CustomerId = koMM.POwner.POwnerId.id;
        var ContactPersonal = $('#ContactPersonal').val();
        var ContactNo = $('#ContactNo').val();
        var CountryId = $('#CountryId').val();
        var Location = $('#Location').val();

        var ProjectInfo = {Id:Id, Name: ProjectName, CustomerId: CustomerId, ContactPersonal: ContactPersonal, ContactNo: ContactNo, CountryId: CountryId,
            Location: Location
        };

        var json = JSON.stringify(ProjectInfo);

        $.ajax({
            url: '/Job/UpdateProject',
            type: 'POST',
            dataType: 'json',
            data: json,
            contentType: 'application/json; charset=utf-8',
            success: function () {
                $.pnotify({
                    title: 'Update Project',
                    text: ' Project has been Updated!',
                    type: 'success'
                });
                ClearProjectDialog();
            },
            error: function () {
                $.pnotify({
                    title: 'Add Project',
                    text: 'Project has not been updated, please try again!',
                    type: 'error'
                });
            }
        });
    }



  function POwnerModel(){
       var self = this;
       self.POwnerId = new selectAuto();

           $("#btnAddProject").click(function (e) {
                ClearProjectDialog();
                $('.chosen-container').css({ 'width': '160px' }); //to fixed chosen css bug in dialogbox
                $dialoge.dialog({
                    width: 750,
                    modal: true,
                    height: 305,
                    buttons: [{
                        text: "Save",
                        'class': 'bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded',
                        click: function () {
                            if ($('#Name').val() == null || $('#CustomerId').val() == 0 || $('#CountryId').val() == 0) {
                                $.pnotify({
                                    title: 'Add Project',
                                    text: ' Please fill the required information!',
                                    type: 'warning'
                                });
                            } else {
                                //  e.preventDefault();
                                SaveProject();
                                $dialoge.dialog('close');
                                // window.location.href = "/Manifest/Create";
                            }
                        }},
                                        {
                                            text: "Close",
                                            'class': 'bg-gray-500 hover:bg-gray-600 text-white font-semibold py-2 px-4 rounded',
                                            click: function () {
                                                $(this).dialog("close");
                                            }
                    }]
                });
            });


            function SaveProject(e) {
                  var Pow;
                    if(self.POwnerId.id > 0)
                    {
                    Pow = self.POwnerId.id;
                    }
                    else if(self.POwnerId.id() > 0)
                    {
                    Pow = self.POwnerId.id();
                    }

                var ProjectName = $('#Name').val();
                var CustomerId = Pow;
                var ContactPersonal = $('#ContactPersonal').val();
                var ContactNo = $('#ContactNo').val();
                var CountryId = $('#CountryId').val();
                var Location = $('#Location').val();

                var ProjectInfo = { Name: ProjectName, CustomerId: CustomerId, ContactPersonal: ContactPersonal, ContactNo: ContactNo, CountryId: CountryId,
                    Location: Location
                };

                var json = JSON.stringify(ProjectInfo);

                $.ajax({
                    url: '/Job/SaveProject',
                    type: 'POST',
                    dataType: 'json',
                    data: json,
                    contentType: 'application/json; charset=utf-8',
                    success: function () {
                        $.pnotify({
                            title: 'Add Project',
                            text: ' New Project has been Saved!',
                            type: 'success'
                        });
                        ClearProjectDialog();
                    },
                    error: function () {
                        $.pnotify({
                            title: 'Add Project',
                            text: 'Project has not been save, please try again!',
                            type: 'error'
                        });
                    }
                });
            }

          }

//Project Owner Selecet Function
ko.bindingHandlers.POwnerSelect = {
    init: function(element, valueAccessor, allBindings, viewModel, bindingContext) {
        // This will be called when the binding is first applied to an element
        // Set up any initial state, event handlers, etc. here

          $(element).autocomplete({
              source: function( request, response ) {
                $.ajax( {
                  url: "../Party/SearchParty",
                  dataType: "json",
                  data:{ 'query':request.term ,"type":1, subtype: 2 },
                  success: function( data ) {
                    var test = [];



                    // pass a function to map
                    const map1 = data.map(x => ({
                    id:x.Id,
                    label:x.Name,
                    value:x.Name
                    }));

                    console.log(map1);
                    response( map1 );
                  }
                } );
            },
          minLength: 2,
           select: function( event, ui ) {
       
          valueAccessor().id =  ui.item.id;
           valueAccessor().value =  ui.item.value;
             console.log(valueAccessor());    
            console.log(viewModel);
            console.log( "Selected: " + ui.item.value + " aka " + ui.item.id );
          }
        } );
    },
    update: function(element, valueAccessor, allBindings, viewModel, bindingContext) {
        // This will be called once when the binding is first applied to an element,
        // and again whenever any observables/computeds that are accessed change
        // Update the DOM element based on the supplied values here.
    }
};

</script>