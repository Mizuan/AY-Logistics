@model AYLogistics.Models.Vessel
@{
    ViewBag.Title = "Manage Vessel";  
}
<div class="mb-6">
    <!-- Tailwind-styled button for opening the modal -->
    <button type="button" id="btnAddVessel" 
            class="bg-blue-600 text-white px-4 py-2 rounded-lg flex items-center space-x-2 text-sm hover:bg-blue-700">
        <i class="fas fa-plus"></i>
        <span>Vessel / Aircraft</span>
    </button>
</div>

<div class="dialogVessel" id="dialogVessel">
   <div class="px-6 pt-6 pb-12 bg-white rounded-lg shadow-lg">
        <h2 class="text-xl font-semibold text-gray-800 mb-4">Add/Edit Vessel</h2>
        <div class="grid grid-cols-1 gap-4">
            <!-- Vessel Name -->
            <div>
                <label for="VesselName" class="block text-sm font-medium text-gray-700 mb-1">Vessel Name</label>
                <input type="text" id="VesselName" class="text-sm w-full border-gray-300 rounded-lg p-2 focus:ring-blue-500" />
            </div>

            <!-- Operator -->
            <div>
                <label for="Operator" class="block text-sm font-medium text-gray-700 mb-1">Operator</label>
                <input type="text" placeholder="Search..." 
                       class="w-full text-sm border-gray-300 rounded-lg p-2 selectedCompany" 
                       data-bind="value: Vessel.Company.value, OperatorSelect: Vessel.Company, uniqueName: false" />
            </div>

            <!-- Registered Country -->
            <div>
                <label for="VesselRegCountry" class="block text-sm font-medium text-gray-700 mb-1">Registered Country</label>
                @Html.DropDownListFor(
                    m => m.VesselRegCountry,
                    new SelectList(AYLogistics.Models.Nationality.GetCountries(), "Id", "Name"),
                    "-Select-",
                    new { @class = "w-full border-gray-300 rounded-lg p-2" })
                @Html.ValidationMessageFor(model => model.VesselRegCountry, null, new { @class = "text-red-500 text-sm" })
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var $Vesseldialog = $(".dialogVessel");
    var selectedCompanyId;

    $(document).ready(function () {
        $(".dialogVessel").hide();
    });

    function ClearVesselDialog() {
        $('#VesselName').val("");
        $('.selectedCompany').val("");
        $(".chosen_select_L").chosen('destroy'); // reset chosen
        $('#VesselRegCountry').val(0);
        $(".chosen_select_L").chosen(); //~
    }

    function EditVessel(Id) {
        $Vesseldialog.dialog({
            width: 400,
            modal: true,
            height: 360,
            classes: {
                "ui-dialog": "bg-white shadow-lg rounded-lg border border-gray-300",
                "ui-dialog-titlebar": "bg-blue-500 text-white font-bold rounded-t-lg",
                "ui-dialog-content": "p-6",
            },
            buttons: [{
                text: "Update",
                'class': 'ml-6 bg-blue-500 hover:bg-blue-600 text-white font-semibold text-sm py-1.5 px-4 rounded mr-2',
                click: function () {
                    /*TO DO: give a condition with Role to disable update button*/
                    UpdateVessel(Id);
                    $Vesseldialog.dialog('close');
                }},
                                {
                                    text: "Close",
                                    'class': 'bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-1.5 text-sm px-4 rounded mt-4',
                                    click: function () {
                                        //$(this).dialog("close");
                                        $(this).dialog("destroy");
                                    }
            }]
        });
        GetSelectedVessel(Id);
     }

     function GetSelectedVessel(Id) {
     ClearVesselDialog();
         var URL = '/Party/GetSelectedVessel';

         $.getJSON(URL + '/?VesselId=' + Id, function (data) {
             try {
                 $('#VesselName').val(data.Name);
                 $('.selectedCompany').val(data.CompanyName);
                 koMM.Vessel.Company.id = data.CompanyId;
                 $(".chosen_select_L").chosen('destroy'); // reset chosen
                 $('#VesselRegCountry').val(data.VesselRegCountry);
                 $(".chosen_select_L").chosen(); //~
             }
             catch (e) {
                 ClearVesselDialog();
             }
         });
     }

     function UpdateVessel(Id) {
         var VesselName = $('#VesselName').val();
         var Company = koMM.Vessel.Company.id;
         var VesselRegCountry = $('#VesselRegCountry').val();

         var VesselInfo = {Id:Id, Name: VesselName, Company: Company, VesselRegCountry:VesselRegCountry};

         var json = JSON.stringify(VesselInfo);

         $.ajax({
             url: '/Party/UpdateVessel',
             type: 'POST',
             dataType: 'json',
             data: json,
             contentType: 'application/json; charset=utf-8',
             success: function () {
                 $.pnotify({
                     title: 'Update Vessel info',
                     text: ' New Vessel info has been Updated!',
                     type: 'success'
                 });
                 ClearVesselDialog();
             },
             error: function () {
                 $.pnotify({
                     title: 'Update Vessel info',
                     text: 'Vessel info has not been Updated, please try again!',
                     type: 'error'
                 });
             }
         });
     }



  function VesselModel(){
       var self = this;
       self.Company = new selectAuto();

       $("#btnAddVessel").click(function (e) {
          ClearVesselDialog();
            $('.chosen-container').css({ 'width': '160px' }); //to fixed chosen css bug in dialogbox
            $Vesseldialog.dialog({
                width: 400,
                modal: true,
                height: 360,
                classes: {
                    "ui-dialog": "bg-white shadow-lg rounded-lg border border-gray-300",
                    "ui-dialog-titlebar": "bg-blue-500 text-white font-bold rounded-t-lg",
                    "ui-dialog-content": "p-6",
                },
                buttons: [{
                    text: "Save",
                    'class': 'ml-6 bg-green-500 hover:bg-green-600 text-white font-semibold text-sm py-1.5 px-4 rounded mr-2 mt-4',
                    click: function () {
                        if ($('#VesselName').val() == null || $('#Company').val() == 0) {
                            $.pnotify({
                                title: 'Add Vessel',
                                text: ' Please fill the required information!',
                                type: 'warning'
                            });
                        } else {;
                            //  e.preventDefault();
                            SaveVessel();
                            $Vesseldialog.dialog('close');
                            // window.location.href = "/Manifest/Create";
                        }
                    }},
                                    {
                                        text: "Close",
                                        'class': 'bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-1.5 text-sm px-4 rounded mt-4',
                                        click: function () {
                                            //$(this).dialog("close");
                                            $(this).dialog("destroy");
                                        }
                }]
            });
         });

//        function ClearVesselDialog() {
//          $('#VesselName').val("");
//          //self.Company = 1;
//         // self.Company.value = 2;
//       }

        function SaveVessel(e) {
            var comp;
                    if(self.Company.id > 0)
                    {
                    comp = self.Company.id;
                    }
                    else if(self.Company.id() > 0)
                    {
                    comp = self.Company.id();
                    }

                var VesselName = $('#VesselName').val();
                var Company = comp;
                var VesselRegCountry = $('#VesselRegCountry').val();

                var VesselInfo = { Name: VesselName, Company: Company, VesselRegCountry:VesselRegCountry};

                var json = JSON.stringify(VesselInfo);

                $.ajax({
                    url: '/Party/SaveVessel',
                    type: 'POST',
                    dataType: 'json',
                    data: json,
                    contentType: 'application/json; charset=utf-8',
                    success: function () {
                        $.pnotify({
                            title: 'Add Vessel info',
                            text: ' New Vessel info has been Saved!',
                            type: 'success'
                        });
                        ClearVesselDialog();
                    },
                    error: function () {
                        $.pnotify({
                            title: 'Add Vessel info',
                            text: 'Vessel info has not been save, please try again!',
                            type: 'error'
                        });
                    }
                });
          }
    }


//Operator Selecet Function
ko.bindingHandlers.OperatorSelect = {
    init: function(element, valueAccessor, allBindings, viewModel, bindingContext) {
        // This will be called when the binding is first applied to an element
        // Set up any initial state, event handlers, etc. here

          $(element).autocomplete({
              source: function( request, response ) {
                $.ajax( {
                  url: "../Party/SearchParty",
                  dataType: "json",
                  data:{ 'query':request.term ,"type":1, subtype: 2 },
                  success: function( data ) {
                    var test = [];



                    // pass a function to map
                    const map1 = data.map(x => ({
                    id:x.Id,
                    label:x.Name,
                    value:x.Name
                    }));

                    console.log(map1);
                    response( map1 );
                  }
                } );
            },
          minLength: 2,
           select: function( event, ui ) {
       
          valueAccessor().id =  ui.item.id;
           valueAccessor().value =  ui.item.value;
             console.log(valueAccessor());    
            console.log(viewModel);
            console.log( "Selected: " + ui.item.value + " aka " + ui.item.id );
          }
        } );
    },
    update: function(element, valueAccessor, allBindings, viewModel, bindingContext) {
        // This will be called once when the binding is first applied to an element,
        // and again whenever any observables/computeds that are accessed change
        // Update the DOM element based on the supplied values here.
    }
};

</script>